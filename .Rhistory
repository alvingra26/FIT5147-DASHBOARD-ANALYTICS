# Convert to numeric
NotDrugs$`Offence.Count` <- as.numeric(gsub(",", "", NotDrugs$`Offence.Count`))
sex_alleged$`Alleged.Offenders.Incidents` <- as.numeric(gsub(",", "", sex_alleged$`Alleged.Offenders.Incidents`))
nodes <- data.frame(name = c(unique(df$Year),
unique(df$`Offence.Division`),
unique(df$`Offence.Subdivision`)))
lookup <- setNames(1:nrow(nodes), nodes$name)
links <- df %>%
mutate(`Offence.Count` = as.numeric(gsub(",", "", `Offence.Count`))) %>%
select(Year, `Offence.Division`, `Offence.Subdivision`, `Offence.Count`) %>%
gather(key = "type", value = "name", -`Offence.Count`) %>%
mutate(ID = lookup[.$name]) %>%
group_by(type, ID, name) %>%
summarise(sum = sum(`Offence.Count`)) %>%
ungroup()
library(tidyverse)
nodes <- data.frame(name = c(unique(df$Year),
unique(df$`Offence.Division`),
unique(df$`Offence.Subdivision`)))
lookup <- setNames(1:nrow(nodes), nodes$name)
links <- df %>%
mutate(`Offence.Count` = as.numeric(gsub(",", "", `Offence.Count`))) %>%
select(Year, `Offence.Division`, `Offence.Subdivision`, `Offence.Count`) %>%
gather(key = "type", value = "name", -`Offence.Count`) %>%
mutate(ID = lookup[.$name]) %>%
group_by(type, ID, name) %>%
summarise(sum = sum(`Offence.Count`)) %>%
ungroup()
links$ID <- links$ID - 1
links1 <- links %>% filter(type == "Year")
links2 <- links %>% filter(type == "Offence Division")
links3 <- links %>% filter(type == "Offence Subdivision")
links <- df %>%
select(Year, `Offence.Division`, `Offence.Subdivision`, `Offence.Count`) %>%
mutate(Year_ID = lookup[.$Year],
Division_ID = lookup[.$`Offence.Division`] + max(lookup),
Subdivision_ID = lookup[.$`Offence.Subdivision`] + max(lookup) * 2) %>%
summarise(
Year_to_Division = sum(`Offence.Count`),
Division_to_Subdivision = sum(`Offence.Count`)
) %>%
pivot_longer(cols = starts_with("source_"),
names_to = "source",
values_to = "target") %>%
mutate(source = as.integer(gsub("source_", "", source)))
View(crime_incidents_data)
runApp('Dashboard.R')
runApp('Dashboard.R')
# Group by Year and Local Government Area to calculate total 'Offence Count' and 'LGA Rate per 100,000 population' per year per LGA
df_grouped <- NotDrugs %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Offence_Count = sum(`Offence.Count`, na.rm = TRUE),
Total_LGA_Rate = sum(`LGA.Rate.per.100.000.population`, na.rm = TRUE), .groups = 'drop')
victims_data$`Victim.Reports` <- as.numeric(gsub(",", "", victims_data$`Victim.Reports`))
NotDrugs$`LGA.Rate.per.100.000.population` <- as.numeric(gsub(",", "", NotDrugs$`LGA.Rate.per.100.000.population`))
crime_incidents_data$`LGA.Rate.per.100.000.population` <- as.numeric(gsub(",", "", crime_incidents_data$`LGA.Rate.per.100.000.population`))
# Summarize data
summarized_victims <- victims_data %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Victim_Reports = sum(Victim.Reports))
# Group by Year and Local Government Area to calculate total 'Offence Count' and 'LGA Rate per 100,000 population' per year per LGA
df_grouped <- NotDrugs %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Offence_Count = sum(`Offence.Count`, na.rm = TRUE),
Total_LGA_Rate = sum(`LGA.Rate.per.100.000.population`, na.rm = TRUE), .groups = 'drop')
LGA_Crime_Incidents <- crime_incidents_data %>%
filter(Offence.Division != 'C Drug offences') %>%
group_by(`Local.Government.Area`) %>%
summarize(Total = sum(`LGA.Rate.per.100.000.population`, na.rm = TRUE))
# Merge the two datasets based on the 'Local Government Area' column
merged_data_victims_offences <- merge(df_grouped, summarized_victims, by = c("Year", "Local.Government.Area"))
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
library(tidyverse)
library(tidygraph)
library(ggraph)
install.packages(c("tidygraph", "ggraph"))
library(tidygraph)
library(ggraph)
# create edges for your network (connections between different entities)
edges <- location_crime_data %>%
select(Location.Division, Location.Subdivision, Location.Group) %>%
gather(key = "type", value = "name") %>%
mutate(id = 1:n()) %>%
group_by(name) %>%
summarise(id = first(id)) %>%
ungroup()
View(edges)
# create nodes for your network (individual entities)
nodes <- location_crime_data %>%
select(Incidents.Recorded, Location.Division, Location.Subdivision, Location.Group) %>%
gather(key = "type", value = "name", -Incidents.Recorded)
# create the network
network <- tbl_graph(nodes = nodes, edges = edges, directed = TRUE)
# plot the network
ggraph(network) +
geom_edge_link() +
geom_node_point() +
theme_graph()
# extract the largest component
largest_component <- network %>%
mutate(cluster = group_components()) %>%
filter(cluster == which.max(table(cluster)))
# plot the network
ggraph(largest_component) +
geom_edge_link() +
geom_node_point() +
theme_graph()
ggraph(network, layout = "fr") +
geom_edge_link() +
geom_node_point() +
theme_graph()
View(nodes)
# Summarize the data by LGA and Location Division
lc_summarized <- location_crime_data %>%
group_by(`Local.Government.Area`, `Location.Division`) %>%
summarise(`Total Incidents` = sum(`Incidents.Recorded`)) %>%
spread(`Location.Division`, `Total Incidents`) %>%
replace(is.na(.), 0)
location_crime_data$`Incidents.Recorded` <- as.numeric(gsub(",", "", location_crime_data$`Incidents.Recorded`))
# Summarize the data by LGA and Location Division
lc_summarized <- location_crime_data %>%
group_by(`Local.Government.Area`, `Location.Division`) %>%
summarise(`Total Incidents` = sum(`Incidents.Recorded`)) %>%
spread(`Location.Division`, `Total Incidents`) %>%
replace(is.na(.), 0)
View(lc_summarized)
# Rearrange data for radar chart
radar_data <- rbind(max(lc_summarized[,-1]), lc_summarized[,-1])
# Create radar chart
radarchart(radar_data, axistype = 1,
title = "Incidents per Location Division",
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
caxislabels = seq(0, max(df_summarized[,-1]), by = 50),
calcex = 0.01)
library(fmsb)
install.packages("fmsb")
radarchart(radar_data, axistype = 1,
title = "Incidents per Location Division",
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
caxislabels = seq(0, max(df_summarized[,-1]), by = 50),
calcex = 0.01)
library(fmsb)
radarchart(radar_data, axistype = 1,
title = "Incidents per Location Division",
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
caxislabels = seq(0, max(df_summarized[,-1]), by = 50),
calcex = 0.01)
View(lc_summarized)
lc_summarized <- cbind(max(lc_summarized[,-1]), lc_summarized)
names(lc_summarized)[1] <- "max"
rownames(lc_summarized) <- lc_summarized$`Local Government Area`
lc_summarized <- lc_summarized[,-2]
# Rearrange data for radar chart
lc_summarized <- cbind(max(lc_summarized[,-1]), lc_summarized)
names(lc_summarized)[1] <- "max"
rownames(lc_summarized) <- lc_summarized$`Local.Government.Area`
lc_summarized <- lc_summarized[,-2]
# Create radar chart
radarchart(lc_summarized,
axistype = 1,
pcol = rainbow(nrow(lc_summarized)),
plwd = 4,
plty = 1,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
title = "Incidents per Location Division for each LGA")
legend(x=0.7, y=1.2,
legend = rownames(lc_summarized),
pch = 20,
col = rainbow(nrow(lc_summarized)))
links <- location_crime_data %>%
group_by(`Local.Government.Area`, `Location.Division`) %>%
summarise(Incidents = sum(`Incidents.Recorded`)) %>%
ungroup()
View(links)
nodes <- data.frame(name = c(as.character(links$`Local.Government.Area`), as.character(links$`Location.Division`)))
links$source <- match(links$`Local.Government.Area`, nodes$name) - 1
links$target <- match(links$`Location.Division`, nodes$name) - 1
links$value <- links$Incidents
View(nodes)
sankeyNetwork(Links = links, Nodes = nodes, Source = 'source',
Target = 'target', Value = 'value', NodeID = 'name',
fontSize = 12, nodeWidth = 30)
View(nodes)
sankeyNetwork(Links = links, Nodes = nodes, Source = 'source',
Target = 'target', Value = 'value', NodeID = 'name',
fontSize = 12, nodeWidth = 100)
sankeyNetwork(Links = links, Nodes = nodes, Source = 'source',
Target = 'target', Value = 'value', NodeID = 'name',
fontSize = 12, nodeWidth = 10000)
sankeyNetwork(Links = links, Nodes = nodes, Source = 'source',
Target = 'target', Value = 'value', NodeID = 'name',
fontSize = 12, nodeWidth = 1000)
View(links)
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
View(sex_alleged)
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
View(merged_data_victims_offences)
lga_alleged <- read.csv("LGA_Alleged.csv")
lga_alleged <- lga_alleged %>%
filter(`Offence.Division` != 'C Drug offences')
View(lga_alleged)
View(lga_alleged)
lga_alleged$`Alleged.Offender.Incidents` <- as.numeric(gsub(",", "", lga_alleged$`Alleged.Offender.Incidents`))
victims_grouped <- victims_data %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Victim_Reports = sum(`Victim.Reports`, na.rm = TRUE))
View(victims_grouped)
View(crime_incidents_data)
crime_grouped <- crime_incidents_data %>%
filter(Offence.Division != 'C Drug offences') %>%
group_by(Year, `Local.Government.Area`) %>%
summarize(Total_Crime_Recorded = sum(`Incidents.Recorded`, na.rm = TRUE))
crime_incidents_data$`Incidents.Recorded` <- as.numeric(gsub(",", "", crime_incidents_data$`Incidents.Recorded`))
crime_grouped <- crime_incidents_data %>%
filter(Offence.Division != 'C Drug offences') %>%
group_by(Year, `Local.Government.Area`) %>%
summarize(Total_Crime_Recorded = sum(`Incidents.Recorded`, na.rm = TRUE))
View(crime_grouped)
alleged_grouped <- lga_alleged %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Alleged_Offender_Incidents = sum(`Alleged.Offender.Incidents`, na.rm = TRUE))
merged_data_victims_alleged_crime <- merge(victims_grouped, alleged_group, crime_grouped, by = c("Year", "Local.Government.Area"))
merged_data_victims_alleged_crime <- merge(victims_grouped, alleged_grouped, crime_grouped, by = c("Year", "Local.Government.Area"))
View(alleged_grouped)
View(crime_grouped)
View(victims_grouped)
merged_data_victims_alleged_crime <- merge(victims_grouped, alleged_grouped, crime_grouped, by = c("Year", "Local.Government.Area"))
merged_data_victims_alleged_crime <- merge(victims_grouped, alleged_grouped, by = c("Year", "Local.Government.Area"))
merged_data_victims_alleged_crime <- merge(merged_data_victims_alleged_crime, crime_grouped, by = c("Year", "Local.Government.Area"))
View(merged_data_victims_alleged_crime)
write.csv(merged_data_victims_alleged_crime, file = "test.csv", row.names = FALSE)
# Convert the data into a format suitable for a Sankey diagram
links <- merged_data_victims_alleged_crime %>%
rename(source = Year, target = Local.Government.Area, value = Total_Crime_Recorded) %>%
mutate(source = as.character(source), target = as.character(target)) %>%
group_by(source, target) %>%
summarise(value = sum(value)) %>%
ungroup()
# Create a list of nodes
nodes <- data.frame(name = unique(c(links$source, links$target)))
Convert the source and target in the links data frame to match the indices of the nodes
# Convert the source and target in the links data frame to match the indices of the nodes
links$source <- match(links$source, nodes$name) - 1
links$target <- match(links$target, nodes$name) - 1
# Create the Sankey diagram
sankeyNetwork(Links = links, Nodes = nodes, Source = "source", Target = "target", Value = "value", NodeID = "name")
# Convert the 'Year' column to a date object
merged_data_victims_alleged_crime$Year <- as.Date(paste(merged_data_victims_alleged_crime$Year, 1, 1, sep="-"), format="%Y-%m-%d")
plot_ly(merged_data_victims_alleged_crime) %>%
add_trace(x = ~Year, y = ~Total_Crime_Recorded, color = ~Local.Government.Area, mode = 'lines') %>%
layout(title = "Total Crime Recorded Over Time by Local Government Area",
xaxis = list(title = "Year"),
yaxis = list (title = "Total Crime Recorded"))
# Convert the 'Year' column to a date object
merged_data_victims_alleged_crime$Year <- as.Date(paste(df$Year, 1, 1, sep="-"), format="%Y-%m-%d")
fig <- merged_data_victims_alleged_crime %>% plot_ly(type = 'parcoords', line = list(color = ~Year),
dimensions = list(
list(range = range(df$Total_Victim_Reports),
constraintrange = range(df$Total_Victim_Reports),
label = 'Victim Reports', values = ~Total_Victim_Reports),
list(range = range(df$Total_Alleged_Offender_Incidents),
label = 'Alleged Offender Incidents', values = ~Total_Alleged_Offender_Incidents),
list(range = range(df$Total_Crime_Recorded),
label = 'Total Crime', values = ~Total_Crime_Recorded)
)
)
fig
fig <- merged_data_victims_alleged_crime %>% plot_ly(type = 'parcoords', line = list(color = ~Local.Government.Area),
dimensions = list(
list(range = range(df$Total_Victim_Reports),
constraintrange = range(df$Total_Victim_Reports),
label = 'Victim Reports', values = ~Total_Victim_Reports),
list(range = range(df$Total_Alleged_Offender_Incidents),
label = 'Alleged Offender Incidents', values = ~Total_Alleged_Offender_Incidents),
list(range = range(df$Total_Crime_Recorded),
label = 'Total Crime', values = ~Total_Crime_Recorded)
)
)
fig
fig <- merged_data_victims_alleged_crime %>% plot_ly(type = 'parcoords', line = list(color = ~Local.Government.Area),
dimensions = list(
list(range = range(merged_data_victims_alleged_crime$Total_Victim_Reports),
constraintrange = range(merged_data_victims_alleged_crime$Total_Victim_Reports),
label = 'Victim Reports', values = ~Total_Victim_Reports),
list(range = range(merged_data_victims_alleged_crime$Total_Alleged_Offender_Incidents),
label = 'Alleged Offender Incidents', values = ~Total_Alleged_Offender_Incidents),
list(range = range(merged_data_victims_alleged_crime$Total_Crime_Recorded),
label = 'Total Crime', values = ~Total_Crime_Recorded)
)
)
fig
merged_data_victims_alleged_crime <- merge(victims_grouped, alleged_grouped, by = c("Year", "Local.Government.Area"))
merged_data_victims_alleged_crime <- merge(merged_data_victims_alleged_crime, crime_grouped, by = c("Year", "Local.Government.Area"))
# Assuming 'df' is your data frame
merged_data_victims_alleged_crime <- merged_data_victims_alleged_crime %>% mutate(Local.Government.Area = as.factor(Local.Government.Area))
fig <- plot_ly(
type = 'parcoords',
line = list(color = merged_data_victims_alleged_crime$Total_Crime_Recorded,
colorscale = 'Jet',
showscale = TRUE,
cmin = min(merged_data_victims_alleged_crime$Total_Crime_Recorded),
cmax = max(merged_data_victims_alleged_crime$Total_Crime_Recorded)),
dimensions = list(
list(range = c(min(merged_data_victims_alleged_crime$Year), max(merged_data_victims_alleged_crime$Year)),
label = 'Year', values = merged_data_victims_alleged_crime$Year),
list(range = c(min(merged_data_victims_alleged_crime$Total_Victim_Reports), max(merged_data_victims_alleged_crime$Total_Victim_Reports)),
label = 'Total Victim Reports', values = merged_data_victims_alleged_crime$Total_Victim_Reports),
list(range = c(min(merged_data_victims_alleged_crime$Total_Alleged_Offender_Incidents), max(merged_data_victims_alleged_crime$Total_Alleged_Offender_Incidents)),
label = 'Total Alleged Offender Incidents', values = merged_data_victims_alleged_crime$Total_Alleged_Offender_Incidents),
list(range = c(min(merged_data_victims_alleged_crime$Total_Crime_Recorded), max(merged_data_victims_alleged_crime$Total_Crime_Recorded)),
label = 'Total Crime Recorded', values = merged_data_victims_alleged_crime$Total_Crime_Recorded)
)
)
fig
runApp('Dashboard.R')
runApp('Dashboard.R')
# Select relevant columns
crime_data_selected <- merged_data_victims_alleged_crime %>% select(Local.Government.Area, Total_Victim_Reports, Total_Alleged_Offender_Incidents, Total_Crime_Recorded)
# Run PCA
crime_pca <- prcomp(crime_data_selected[,-1], center = TRUE, scale. = TRUE)
# Plot PCA
ggbiplot(crime_pca, obs.scale = 1, var.scale = 1,
groups = crime_data_selected$Local.Government.Area,
ellipse = TRUE,
circle = TRUE) +
scale_color_discrete(name = '') +
theme_bw() +
ggtitle("PCA Plot of Crime Data") +
theme(legend.position="bottom", legend.direction="horizontal")
install.packages("ggbiplot")
# Get PCA results
pca_results <- as.data.frame(crime_pca$x)
# Add local government area to the PCA results
pca_results$Local.Government.Area <- crime_data_selected$Local.Government.Area
# Plot PCA with plotly
fig <- plot_ly(pca_results, x = ~PC1, y = ~PC2, color = ~Local.Government.Area,
text = ~paste("Local Government Area: ", Local.Government.Area),
type = "scatter", mode = "markers")
# Add axes labels
fig <- fig %>% layout(xaxis = list(title = "PC1"),
yaxis = list(title = "PC2"))
fig
runApp('Dashboard.R')
unemployment_data <- read.csv("Unemployed_And_Monthly_Hours_Worked.csv")
# Assuming your data is in a dataframe called df
unemployment_data$Date <- as.Date(unemployment_data$Date, format="%b-%Y") # Convert the Date column to Date type
unemployment_data <- unemployment_data %>%
mutate(Year = as.numeric(format(Date, "%Y"))) # Add Year column
# Plot
fig <- plot_ly(unemployment_data, x = ~Date, y = ~Monthly_Hours_Worked, name = 'Monthly Hours Worked', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~Unemployed_Individuals, name = 'Unemployed Individuals', mode = 'lines') %>%
layout(title = "Monthly Hours Worked vs Unemployed Individuals Over the Years",
xaxis = list(title = "Year"),
yaxis = list(title = "Value"))
fig
View(unemployment_data)
unemployment_data <- read.csv("Unemployed_And_Monthly_Hours_Worked.csv")
fig <- plot_ly(unemployment_data, x = ~Date, y = ~Monthly.Hours.Worked, name = 'Monthly Hours Worked', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~Unemployed.Individuals, name = 'Unemployed Individuals', mode = 'lines') %>%
layout(title = "Monthly Hours Worked vs Unemployed Individuals Over the Years",
xaxis = list(title = "Year"),
yaxis = list(title = "Value"))
fig
fig <- plot_ly(unemployment_data, x = ~Year, y = ~Monthly.Hours.Worked, name = 'Monthly Hours Worked', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~Unemployed.Individuals, name = 'Unemployed Individuals', mode = 'lines') %>%
layout(title = "Monthly Hours Worked vs Unemployed Individuals Over the Years",
xaxis = list(title = "Year"),
yaxis = list(title = "Value"))
fig
runApp('Dashboard.R')
runApp('Dashboard.R')
library(treemapify) # for 'geom_treemap'
runApp('Dashboard.R')
library(shiny)
library(shinydashboard)
library(plotly)
library(dplyr)
library(ggplot2)
# Read your data into a data frame
df <- read.csv('LGA_RATE_PER100K.csv')
victims_data <- read.csv('VICTIMS_DATA.csv')
crime_incidents_data <- read.csv("LGA_CRIMINAL_INCIDENTS.csv")
location_crime_data <- read.csv("Location_Criminal.csv")
sex_alleged <- read.csv("LGA_Sex_AllegedOff.csv")
age_alleged <- read.csv("LGA_Age_AllegedOff.csv")
lga_alleged <- read.csv("LGA_Alleged.csv")
unemployment_data <- read.csv("Unemployed_And_Monthly_Hours_Worked.csv")
# Filter out 'C Drug offences'
NotDrugs <- df %>%
filter(`Offence.Division` != 'C Drug offences')
lga_alleged <- lga_alleged %>%
filter(`Offence.Division` != 'C Drug offences')
# Convert to numeric
NotDrugs$`Offence.Count` <- as.numeric(gsub(",", "", NotDrugs$`Offence.Count`))
location_crime_data$`Incidents.Recorded` <- as.numeric(gsub(",", "", location_crime_data$`Incidents.Recorded`))
victims_data$`Victim.Reports` <- as.numeric(gsub(",", "", victims_data$`Victim.Reports`))
NotDrugs$`LGA.Rate.per.100.000.population` <- as.numeric(gsub(",", "", NotDrugs$`LGA.Rate.per.100.000.population`))
crime_incidents_data$`LGA.Rate.per.100.000.population` <- as.numeric(gsub(",", "", crime_incidents_data$`LGA.Rate.per.100.000.population`))
crime_incidents_data$`Incidents.Recorded` <- as.numeric(gsub(",", "", crime_incidents_data$`Incidents.Recorded`))
lga_alleged$`Alleged.Offender.Incidents` <- as.numeric(gsub(",", "", lga_alleged$`Alleged.Offender.Incidents`))
# Summarize data
summarized_victims <- victims_data %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Victim_Reports = sum(Victim.Reports))
# Group by Year and Local Government Area to calculate total 'Offence Count' and 'LGA Rate per 100,000 population' per year per LGA
df_grouped <- NotDrugs %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Offence_Count = sum(`Offence.Count`, na.rm = TRUE),
Total_LGA_Rate = sum(`LGA.Rate.per.100.000.population`, na.rm = TRUE), .groups = 'drop')
LGA_Crime_Incidents <- crime_incidents_data %>%
filter(Offence.Division != 'C Drug offences') %>%
group_by(`Local.Government.Area`) %>%
summarize(Total = sum(`LGA.Rate.per.100.000.population`, na.rm = TRUE))
# Group by Year and Local Government Area to visualise 3 categorical
victims_grouped <- victims_data %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Victim_Reports = sum(`Victim.Reports`, na.rm = TRUE))
alleged_grouped <- lga_alleged %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Alleged_Offender_Incidents = sum(`Alleged.Offender.Incidents`, na.rm = TRUE))
crime_grouped <- crime_incidents_data %>%
filter(Offence.Division != 'C Drug offences') %>%
group_by(Year, `Local.Government.Area`) %>%
summarize(Total_Crime_Recorded = sum(`Incidents.Recorded`, na.rm = TRUE))
# Merge the two datasets based on the 'Local Government Area' column
merged_data_victims_offences <- merge(df_grouped, summarized_victims, by = c("Year", "Local.Government.Area"))
merged_data_victims_alleged_crime <- merge(victims_grouped, alleged_grouped, by = c("Year", "Local.Government.Area"))
merged_data_victims_alleged_crime <- merge(merged_data_victims_alleged_crime, crime_grouped, by = c("Year", "Local.Government.Area"))
merged_data_victims_alleged_crime <- merged_data_victims_alleged_crime %>% mutate(Local.Government.Area = as.factor(Local.Government.Area))
runApp('Dashboard.R')
runApp('Dashboard.R')
setwd("/Users/alvin.gra/Desktop/FIT5147 - Data Visualisation and Exploration/Narrative Visualisation")
# Load the 'plotly' and 'dplyr' packages
library(shiny)
library(shinydashboard)
library(plotly)
library(dplyr)
library(ggplot2)
library(forcats)
# Read datas into a data frame
df <- read.csv('LGA_RATE_PER100K.csv')
victims_data <- read.csv('VICTIMS_DATA.csv')
crime_incidents_data <- read.csv("LGA_CRIMINAL_INCIDENTS.csv")
location_crime_data <- read.csv("Location_Criminal.csv")
sex_alleged <- read.csv("LGA_Sex_AllegedOff.csv")
age_alleged <- read.csv("LGA_Age_AllegedOff.csv")
lga_alleged <- read.csv("LGA_Alleged.csv")
unemployment_data <- read.csv("Unemployed_And_Monthly_Hours_Worked.csv")
# Filter out 'C Drug offences'
NotDrugs <- df %>%
filter(`Offence.Division` != 'C Drug offences')
lga_alleged <- lga_alleged %>%
filter(`Offence.Division` != 'C Drug offences')
# Convert to numeric
NotDrugs$`Offence.Count` <- as.numeric(gsub(",", "", NotDrugs$`Offence.Count`))
location_crime_data$`Incidents.Recorded` <- as.numeric(gsub(",", "", location_crime_data$`Incidents.Recorded`))
victims_data$`Victim.Reports` <- as.numeric(gsub(",", "", victims_data$`Victim.Reports`))
NotDrugs$`LGA.Rate.per.100.000.population` <- as.numeric(gsub(",", "", NotDrugs$`LGA.Rate.per.100.000.population`))
crime_incidents_data$`LGA.Rate.per.100.000.population` <- as.numeric(gsub(",", "", crime_incidents_data$`LGA.Rate.per.100.000.population`))
crime_incidents_data$`Incidents.Recorded` <- as.numeric(gsub(",", "", crime_incidents_data$`Incidents.Recorded`))
lga_alleged$`Alleged.Offender.Incidents` <- as.numeric(gsub(",", "", lga_alleged$`Alleged.Offender.Incidents`))
# Summarize data
summarized_victims <- victims_data %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Victim_Reports = sum(Victim.Reports))
# Group by Year and Local Government Area to calculate total 'Offence Count' and 'LGA Rate per 100,000 population' per year per LGA
df_grouped <- NotDrugs %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Offence_Count = sum(`Offence.Count`, na.rm = TRUE),
Total_LGA_Rate = sum(`LGA.Rate.per.100.000.population`, na.rm = TRUE), .groups = 'drop')
LGA_Crime_Incidents <- crime_incidents_data %>%
filter(Offence.Division != 'C Drug offences') %>%
group_by(`Local.Government.Area`) %>%
summarize(Total = sum(`LGA.Rate.per.100.000.population`, na.rm = TRUE))
# Group by Year and Local Government Area to visualise 3 categorical
victims_grouped <- victims_data %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Victim_Reports = sum(`Victim.Reports`, na.rm = TRUE))
alleged_grouped <- lga_alleged %>%
group_by(Year, `Local.Government.Area`) %>%
summarise(Total_Alleged_Offender_Incidents = sum(`Alleged.Offender.Incidents`, na.rm = TRUE))
crime_grouped <- crime_incidents_data %>%
filter(Offence.Division != 'C Drug offences') %>%
group_by(Year, `Local.Government.Area`) %>%
summarize(Total_Crime_Recorded = sum(`Incidents.Recorded`, na.rm = TRUE))
# Merge the two datasets based on the 'Local Government Area' column
merged_data_victims_offences <- merge(df_grouped, summarized_victims, by = c("Year", "Local.Government.Area"))
merged_data_victims_alleged_crime <- merge(victims_grouped, alleged_grouped, by = c("Year", "Local.Government.Area"))
merged_data_victims_alleged_crime <- merge(merged_data_victims_alleged_crime, crime_grouped, by = c("Year", "Local.Government.Area"))
merged_data_victims_alleged_crime <- merged_data_victims_alleged_crime %>% mutate(Local.Government.Area = as.factor(Local.Government.Area))
runApp('Dashboard.R')
library(shiny); runApp('Dashboard.R')
